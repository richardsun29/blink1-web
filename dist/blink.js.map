{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/config.ts","webpack:///./src/util/factory.ts","webpack:///./src/util/message-receiver.ts","webpack:///external \"lodash\"","webpack:///./src/blink/index.ts","webpack:///external \"dotenv\"","webpack:///external \"node-blink1\"","webpack:///external \"pusher\"","webpack:///external \"pusher-js\"","webpack:///./src/util/message-sender.ts","webpack:///./src/blink/blink.ts","webpack:///external \"tinycolor2\"","webpack:///./src/types/message.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__importDefault","default","config","ConfigNotSetError","_super","message","_this","this","__extends","Error","Config","getRequiredConfig","process","env","getOptionalConfig","defaultValue","e","parseInt","node_blink1_1","pusher_1","pusher_js_1","config_1","message_receiver_1","message_sender_1","Factory","createPusherClient","PUSHER_KEY","cluster","PUSHER_CLUSTER","encrypted","createPusherServer","appId","PUSHER_APPID","secret","PUSHER_SECRET","createBlink1","createMessageReceiver","createMessageSender","factory_1","MessageReceiver","eventBindings","reconnectTimer","pusher","channel","connect","eventName","callback","push","disconnect","subscribe","PUSHER_BLINK_CHANNEL","connection","err","console","error","reconnect","log","clearInterval","warn","setInterval","require","blink_1","BlinkApp","messageReceiver","blink","run","processMessage","MessageSender","pusherServer","trigger","data","subscriberConnected","path","params","req","res","statusCode","result","JSON","parse","body","occupied","lodash_1","tinycolor2_1","message_1","Blink","handleTimeout","debounce","blink1","off","BLINK_TIMEOUT","type","MessageType","BlinkOff","BlinkSetColor","setColor","color","close","cancel","rgb","toRgb","fadeToRGB","g","b","BlinkOffMessage","BlinkSetColorMessage","isValidMessage","isObjectLike","isString","test","isValidColor"],"mappings":"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","file":"blink.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import dotenv from 'dotenv';\ndotenv.config();\n\nclass ConfigNotSetError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ConfigNotSetError';\n  }\n}\n\nexport default class Config {\n  private static getRequiredConfig(name: string): string {\n    if (process.env[name]) {\n      return process.env[name] as string;\n    } else {\n      throw new ConfigNotSetError(name);\n    }\n  }\n\n  private static getOptionalConfig(name: string, defaultValue?: string): string {\n    try {\n      return this.getRequiredConfig(name);\n    } catch (e) {\n      // Typescript 2.1 breaking change: instanceof Error subclass doesn't work\n      // if (e instanceof ConfigNotSetError && defaultValue) {\n      if (e.name === 'ConfigNotSetError' && defaultValue) {\n        return defaultValue;\n      }\n      throw e;\n    }\n  }\n\n  public static get PUSHER_APPID(): string { return this.getRequiredConfig('PUSHER_APPID'); }\n  public static get PUSHER_KEY(): string { return this.getRequiredConfig('PUSHER_KEY'); }\n  public static get PUSHER_SECRET(): string { return this.getRequiredConfig('PUSHER_SECRET'); }\n  public static get PUSHER_CLUSTER(): string { return this.getRequiredConfig('PUSHER_CLUSTER'); }\n  public static get PUSHER_BLINK_CHANNEL(): string { return 'blink'; }\n\n  public static get PORT(): number { return parseInt(this.getOptionalConfig('PORT', '5000')); }\n  public static get PASSWORD_HASH(): string { return this.getRequiredConfig('PASSWORD_HASH'); }\n  public static get JWT_SECRET(): string { return this.getRequiredConfig('JWT_SECRET'); }\n\n  public static get BLINK_TIMEOUT(): number { return parseInt(this.getOptionalConfig('BLINK_TIMEOUT', '30')); }\n}\n","import Blink1 from 'node-blink1';\nimport PusherServer from 'pusher';\nimport PusherClient from 'pusher-js';\n\nimport Config from './config';\nimport MessageReceiver from './message-receiver';\nimport MessageSender from './message-sender';\n\n/* tslint:disable:member-ordering */\nexport default class Factory {\n  public static createPusherClient(): Pusher.Pusher {\n    return new PusherClient(Config.PUSHER_KEY, {\n      cluster: Config.PUSHER_CLUSTER,\n      encrypted: true,\n      // activityTimeout: 60 * 1000,\n    });\n  }\n\n  public static createPusherServer(): PusherServer {\n    return new PusherServer({\n      appId: Config.PUSHER_APPID,\n      key: Config.PUSHER_KEY,\n      secret: Config.PUSHER_SECRET,\n      encrypted: true,\n      cluster: Config.PUSHER_CLUSTER,\n    });\n  }\n\n  public static createBlink1(): Blink1 {\n    return new Blink1();\n  }\n\n  public static createMessageReceiver(): MessageReceiver {\n    return new MessageReceiver();\n  }\n\n  public static createMessageSender(): MessageSender {\n    return new MessageSender();\n  }\n}\n","import Config from './config';\nimport Factory from './factory';\n\nexport default class MessageReceiver {\n  private pusher: Pusher.Pusher;\n  private channel: Pusher.Channel;\n\n  private eventBindings: Array<{ eventName: string, callback: Pusher.EventCallback }> = [];\n  private reconnectTimer: NodeJS.Timer | null = null;\n\n  constructor() {\n    // @ts-ignore\n    this.pusher = null;\n    // @ts-ignore\n    this.channel = null;\n\n    this.connect();\n  }\n\n  public bind(eventName: string, callback: Pusher.EventCallback): void {\n    this.eventBindings.push({ eventName, callback });\n    this.channel.bind(eventName, callback);\n  }\n\n  public disconnect(): void {\n    this.pusher.disconnect();\n  }\n\n  private connect(): void {\n    this.pusher = Factory.createPusherClient();\n    this.channel = this.pusher.subscribe(Config.PUSHER_BLINK_CHANNEL);\n\n    this.pusher.connection.bind('error', (err) => {\n      console.error('Pusher: connection error', err);\n    });\n\n    // try to reconnect if network goes down\n    this.pusher.connection.bind('unavailable', () => this.reconnect());\n\n    this.pusher.connection.bind('connected', () => {\n      console.log('Pusher: connected');\n\n      if (this.reconnectTimer) {\n        clearInterval(this.reconnectTimer);\n        this.reconnectTimer = null;\n      }\n    });\n  }\n\n  private reconnect(): void {\n      console.warn('Pusher: unavailable, reconnecting');\n\n      if (this.reconnectTimer) {\n        // already reconnecting\n        return;\n      }\n\n      this.reconnectTimer = setInterval(() => {\n        //this.disconnect();\n        //this.connect();\n      }, 60 * 1000);\n  }\n}\n","module.exports = require(\"lodash\");","import MessageReceiver from '../util/message-receiver';\nimport Blink from './blink';\n\nclass BlinkApp {\n  private messageReceiver: MessageReceiver;\n  private blink: Blink;\n\n  constructor() {\n    this.messageReceiver = new MessageReceiver();\n    this.blink = new Blink();\n  }\n\n  public run(): void {\n    this.messageReceiver.bind('blink', this.blink.processMessage.bind(this.blink));\n  }\n}\n\nconst app = new BlinkApp();\napp.run();\n","module.exports = require(\"dotenv\");","module.exports = require(\"node-blink1\");","module.exports = require(\"pusher\");","module.exports = require(\"pusher-js\");","import PusherServer from 'pusher';\n\nimport Config from './config';\nimport Factory from './factory';\n\nexport default class MessageSender {\n  private pusherServer: PusherServer;\n\n  constructor() {\n    this.pusherServer = Factory.createPusherServer();\n  }\n\n  public trigger(eventName: string, data: any): void {\n    this.pusherServer.trigger(Config.PUSHER_BLINK_CHANNEL, eventName, data);\n  }\n\n  public subscriberConnected(callback: (isConnected: boolean) => void): void {\n    this.pusherServer.get({\n      path: `/channels/${Config.PUSHER_BLINK_CHANNEL}`,\n      params: {},\n    }, (err, req, res) => {\n      if (err) {\n        callback(false);\n        return;\n      }\n      if (res.statusCode === 200) {\n        const result = JSON.parse(res.body);\n        callback(result.occupied);\n      } else {\n        console.error(err);\n        callback(false);\n      }\n    });\n  }\n}\n","import _ from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nimport Blink1 from 'node-blink1';\nimport {\n  BlinkSetColorMessage,\n  Message,\n  MessageType,\n } from '../types/message';\n import Config from '../util/config';\n import Factory from '../util/factory';\n\nexport default class Blink {\n\n  constructor() {\n    try {\n      this.blink1 = Factory.createBlink1();\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n  // @ts-ignore\n  private blink1: Blink1;\n\n  // turn off blink if no commands are sent\n  private handleTimeout = _.debounce(() => {\n    try {\n      this.blink1.off();\n    } catch (e) {}\n  }, Config.BLINK_TIMEOUT * 1000);\n\n  public processMessage(message: Message): void {\n    switch (message.type) {\n      case MessageType.BlinkOff:\n        this.off();\n        break;\n      case MessageType.BlinkSetColor:\n        this.setColor((message as BlinkSetColorMessage).color);\n        break;\n    }\n  }\n\n  public close(): void {\n    this.handleTimeout.cancel();\n    try {\n      this.blink1.close();\n    } catch (e) {}\n  }\n\n  private off(): void {\n    this.run(() => {\n      this.blink1.off();\n    });\n  }\n\n  private setColor(color: string): void {\n    const rgb: tinycolor.ColorFormats.RGB = tinycolor(color).toRgb();\n    this.run(() => {\n      this.blink1.fadeToRGB(500, rgb.r, rgb.g, rgb.b);\n    });\n  }\n\n  // try to reconnect to device if fails\n  private run(callback: () => void): void {\n    try {\n      callback();\n    } catch (e) {\n      try {\n        this.blink1 = Factory.createBlink1();\n        callback();\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n    this.handleTimeout();\n  }\n}\n","module.exports = require(\"tinycolor2\");","import _ from 'lodash';\n\nexport enum MessageType {\n  BlinkOff,\n  BlinkSetColor,\n}\n\nexport interface Message {\n  type: MessageType;\n}\n\nexport class BlinkOffMessage implements Message {\n  public type = MessageType.BlinkOff;\n\n  constructor() { }\n}\n\nexport class BlinkSetColorMessage implements Message {\n  public type = MessageType.BlinkSetColor;\n  public color: string;\n\n  constructor(color: string) {\n    this.color = color;\n  }\n}\n\n// validate format\nfunction isValidColor(color: any): boolean {\n  if (!_.isString(color)) {\n    return false;\n  }\n  const colorRegex = /^#[0-9a-f]{6}$/i;\n  return colorRegex.test(color);\n}\nexport function isValidMessage(message: any): message is Message {\n  if (!_.isObjectLike(message)) {\n    return false;\n  }\n  switch (message.type) {\n    case MessageType.BlinkOff:\n      return true;\n    case MessageType.BlinkSetColor:\n      return isValidColor(message.color);\n    default:\n      return false;\n  }\n}\n"],"sourceRoot":""}